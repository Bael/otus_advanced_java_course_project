plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.github.bael.otus.java'
version = '0.0.1-SNAPSHOT'
description = 'calendar'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

// Если используете Lombok, добавьте это
compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE'
    ]
}

ext {
    mapstructVersion = "1.6.3"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    compileOnly 'org.projectlombok:lombok'
    implementation 'com.cronutils:cron-utils:9.2.1'

    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.16.1' // Use the appropriate version


    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"

    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0' // важно для работы с Lombok


    // MapStruct
//    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
//    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    // Swagger/OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

//    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
